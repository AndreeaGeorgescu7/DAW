// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestDAW1.Data;

#nullable disable

namespace TestDAW1.Migrations
{
    [DbContext(typeof(Project_context))]
    [Migration("20220822115721_Add-Migration AddRelations")]
    partial class AddMigrationAddRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestDAW1.Entities.BridePackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfServices")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Time")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("BridePackages");
                });

            modelBuilder.Entity("TestDAW1.Entities.EmployeeBridePackage", b =>
                {
                    b.Property<int>("HairStylistId")
                        .HasColumnType("int");

                    b.Property<int>("BridePackageId")
                        .HasColumnType("int");

                    b.HasKey("HairStylistId", "BridePackageId");

                    b.HasIndex("BridePackageId");

                    b.ToTable("EmployeeBridePackages");
                });

            modelBuilder.Entity("TestDAW1.Entities.HairService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HairStylistId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("HairStylistId");

                    b.ToTable("HairServices");
                });

            modelBuilder.Entity("TestDAW1.Entities.HairStylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HairStylists");
                });

            modelBuilder.Entity("TestDAW1.Entities.PersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HairStylistId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HairStylistId")
                        .IsUnique();

                    b.ToTable("Datas");
                });

            modelBuilder.Entity("TestDAW1.Entities.EmployeeBridePackage", b =>
                {
                    b.HasOne("TestDAW1.Entities.BridePackage", "BridePackage")
                        .WithMany("EmployeeBridePackages")
                        .HasForeignKey("BridePackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestDAW1.Entities.HairStylist", "HairStylist")
                        .WithMany("EmployeeBridePackages")
                        .HasForeignKey("HairStylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BridePackage");

                    b.Navigation("HairStylist");
                });

            modelBuilder.Entity("TestDAW1.Entities.HairService", b =>
                {
                    b.HasOne("TestDAW1.Entities.HairStylist", "HairStylist")
                        .WithMany("HairServices")
                        .HasForeignKey("HairStylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HairStylist");
                });

            modelBuilder.Entity("TestDAW1.Entities.PersonalData", b =>
                {
                    b.HasOne("TestDAW1.Entities.HairStylist", "HairStylist")
                        .WithOne("PersonalData")
                        .HasForeignKey("TestDAW1.Entities.PersonalData", "HairStylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HairStylist");
                });

            modelBuilder.Entity("TestDAW1.Entities.BridePackage", b =>
                {
                    b.Navigation("EmployeeBridePackages");
                });

            modelBuilder.Entity("TestDAW1.Entities.HairStylist", b =>
                {
                    b.Navigation("EmployeeBridePackages");

                    b.Navigation("HairServices");

                    b.Navigation("PersonalData");
                });
#pragma warning restore 612, 618
        }
    }
}
